{"version":3,"sources":["components/CustomersPage.js","components/HistoryPage.js","components/TransactionForm.js","App.js","reportWebVitals.js","index.js"],"names":["CustomersPage","props","state","customers","axios","get","then","response","console","log","data","status","setState","catch","err","this","Fragment","class","className","href","type","id","length","map","customer","email","name","account_no","balance","style","fontSize","PureComponent","HistoryPage","history","date","Date","fromName","toName","amount","toUTCString","_id","TransactionForm","sender","receiver","maxSender","onSubmit","bind","onAmountChange","onFromSelectChange","onToSelectChange","e","preventDefault","formData","from","to","post","alert","message","window","location","reload","target","value","Number","split","border","htmlFor","fontWeight","onChange","hidden","marginTop","marginRight","min","max","form","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a726947e.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport axios from 'axios'\n\nclass CustomersPage extends PureComponent {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             customers: []\n        }\n    }\n\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/')\n        .then(response=>{\n            console.log(response);\n            if(response.data.status){\n                this.setState({\n                    customers: response.data.customers\n                });\n            }\n        })\n        .catch(err=>{\n            console.log('Error!\\n'+err);\n        })\n    }\n    \n    render() {\n        let { customers } = this.state;\n        console.log(customers);\n        return (\n                <React.Fragment>\n                    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                        <div className=\"container-fluid\">\n                            <a className=\"navbar-brand\" href=\"/\">Banking System</a>\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                <li className=\"nav-item\">\n                                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/history\">History</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/transfer\">Transactions</a>\n                                </li>\n                            </ul>\n                            </div>\n                        </div>\n                        </nav>\n                    <div className='container py-3 mb-5'>\n                    <h1 className='m-3'>Customers:</h1>\n                        {\n                            (customers.length>0)?\n                                customers.map(customer => \n                                    <React.Fragment key={customer.account_no}>\n                                        <div className=\"mycard rounded mx-2 my-3 py-3 px-4\">\n                                            <h2>{customer.email}</h2>\n                                            <h5>Name: {customer.name}</h5>\n                                            Account no.: {customer.account_no} &nbsp; | &nbsp; Balance: Rs.{customer.balance}\n                                        </div>\n                                    </React.Fragment>\n                                )\n                            :\n                                <div className=\"mycard rounded text-center m-2 p-4\" style={{fontSize: '22px'}}>\n                                    <h3>There is nothing to show right now...</h3>\n                                </div>\n                        }\n                    </div>\n                </React.Fragment>\n        )\n    }\n}\n\nexport default CustomersPage\n","import React, { PureComponent } from 'react'\nimport axios from 'axios'\n\nclass HistoryPage extends PureComponent {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             history: []\n        }\n    }\n\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/history')\n        .then(response=>{\n            console.log(response);\n            if(response.data.status){\n                this.setState({\n                    history: response.data.history\n                });\n            }\n        })\n        .catch(err=>{\n            console.log('Error!\\n'+err);\n        })\n    }\n    \n    render() {\n        let { history } = this.state;\n        return (\n                <React.Fragment>\n                    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                        <div className=\"container-fluid\">\n                            <a className=\"navbar-brand\" href=\"/\">Banking System</a>\n                            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                                <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/\">Home</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                <a className=\"nav-link active\" href=\"/history\">History</a>\n                                </li>\n                                <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"/transfer\">Transactions</a>\n                                </li>\n                            </ul>\n                            </div>\n                        </div>\n                    </nav>\n                    <div className='container py-3 mb-5'>\n                    <h1 className='m-3'>History:</h1>\n                        {\n                            (history.length>0)?\n                                history.map(customer => {\n                                    let date = new Date(customer.date);\n                                    return(\n                                        <React.Fragment key={customer._id}>\n                                        <div className=\"mycard rounded m-2 py-3 px-4\" style={{fontSize: '22px'}}>\n                                            <h1>{customer.name}</h1>\n                                            <span>From:</span> {customer.fromName} <br/> <span>To:</span> {customer.toName} <br/> <span>Amount:</span> Rs.{customer.amount}<br/>\n                                            <span>Transaction Date:</span> {date.toUTCString()}\n                                        </div>\n                                    </React.Fragment>\n                                    )\n                                })\n                                :\n                                <div className=\"mycard rounded text-center m-2 p-4\" style={{fontSize: '22px'}}>\n                                    <h3>There is nothing to show right now...</h3>\n                                </div>\n                        }\n                    </div>\n                </React.Fragment>\n        )\n    }\n}\n\nexport default HistoryPage\n","import React, { PureComponent } from 'react'\nimport axios from 'axios'\n\nclass TransactionForm extends PureComponent {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            amount: 1,\n            customers: [],\n            sender: null,\n            receiver: null,\n            maxSender: 99999,\n        }\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onAmountChange = this.onAmountChange.bind(this);\n        this.onFromSelectChange = this.onFromSelectChange.bind(this);\n        this.onToSelectChange = this.onToSelectChange.bind(this);\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        let {sender, receiver, amount} = this.state;\n        let formData = {\n            from: sender,\n            to: receiver,\n            amount: amount\n        }\n        axios.post('http://localhost:5000/transfer', formData)\n        .then(response=>{\n            if(response.data.status){\n                alert(response.data.message);\n                window.location.reload();\n            }else{\n                alert('Something went wrong!\\n'+response.data.message);\n            }\n        }).catch(err=>{\n            alert('Something went wrong!\\nTry again later...');\n            console.log('Error!\\n'+err);\n        })\n    }\n\n    onAmountChange(e){\n        this.setState({\n            amount: e.target.value\n        });\n    }\n\n    onFromSelectChange(e){\n        this.setState({\n            sender: Number(e.target.value.split(';')[0]),\n            maxSender: Number(e.target.value.split(';')[1])\n        }, ()=>{\n            if(this.state.amount>this.state.maxSender)\n            this.setState({amount: Number(this.state.maxSender)});\n        });\n    }\n\n    onToSelectChange(e){\n        this.setState({\n            receiver: Number(e.target.value)\n        });\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:5000/')\n        .then(response=>{\n            if(response.data.status){\n                this.setState({\n                    customers: response.data.customers\n                });\n            }else{\n                alert('Something went wrong!');\n            }\n        }).catch(err=>{\n            console.log('Error!\\n'+err);\n        })\n    }\n    \n    render() {\n        return (\n            <>\n                <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                    <div className=\"container-fluid\">\n                        <a className=\"navbar-brand\" href=\"/\">Banking System</a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                            <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/\">Home</a>\n                            </li>\n                            <li className=\"nav-item\">\n                            <a className=\"nav-link\" href=\"/history\">History</a>\n                            </li>\n                            <li className=\"nav-item\">\n                            <a className=\"nav-link active\" href=\"/transfer\">Transactions</a>\n                            </li>\n                        </ul>\n                        </div>\n                    </div>\n                </nav>\n                <div className='container mt-5 mb-4'>\n                    <div className=\"form text-center p-3 rounded\" style={{border: '1px solid black'}}>\n                        <h2 className='mt-3'>Transaction Form</h2>\n                        <form className='text-start p-4' id='form1' onSubmit={this.onSubmit}>\n                            <div className='form-group my-3'>\n                                <label htmlFor='fromSelect' className=\"form-label\" style={{fontWeight: 'bold'}}>From:</label>\n                                    <select id='fromSelect' className='form-control' onChange={this.onFromSelectChange}>\n                                        <option value='' hidden>select sender</option>\n                                        {\n                                            this.state.customers.map((customer)=>\n                                                (Number(this.state.receiver)!==customer.account_no)?\n                                                    <option key={customer._id} value={customer.account_no+';'+customer.balance}>{customer.email} (Rs.{customer.balance})</option>\n                                                :\n                                                    <></>\n                                            )\n                                        }\n                                    </select>\n                            </div>\n\n                            <div className='form-group my-3'>\n                                <label htmlFor='toSelect' className='form-label' style={{fontWeight: 'bold'}}>To:</label>\n                                    <select id='toSelect' className='form-control' onChange={this.onToSelectChange}>\n                                        <option value='' hidden>select receiver</option>\n                                        {\n                                            this.state.customers.map((customer)=>\n                                                (Number(this.state.sender)!==customer.account_no)?\n                                                    <option key={customer._id} value={customer.account_no}>{customer.email} (Rs.{customer.balance})</option>\n                                                :\n                                                    <></>\n                                            )\n                                        }\n                                    </select>\n                            </div>\n\n                            <div className='form-group' style={{marginTop: '30px'}}>\n                                <label htmlFor='amount' className='form-label' style={{fontWeight: 'bold', marginRight: '15px'}}>Amount:</label>\n                                <input type='number' className='form-control' id='amount' min='1' max={this.state.maxSender} value={this.state.amount} onChange={this.onAmountChange}/>\n                            </div>\n\n                        </form>\n                        <input type='submit' form='form1' className='btn btn-success mb-3' value=\"Transfer\"/>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default TransactionForm\n","import React, { PureComponent } from 'react'\nimport { Route, Switch } from 'react-router'\nimport CustomersPage from './components/CustomersPage'\nimport HistoryPage from './components/HistoryPage'\nimport TransactionForm from './components/TransactionForm'\nimport './App.css'\n\nclass App extends PureComponent {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" component={()=><CustomersPage/>} />\n          <Route exact path=\"/history\" component={()=><HistoryPage/>} />\n          <Route exact path=\"/transfer\" component={()=><TransactionForm/>} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}